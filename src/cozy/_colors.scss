/*
 * Use the Cozy palette of colors for sass variables.
 *
 * TODO: First define the CSS variables and then use it for sass variables
 * (like $success: var(--validColor)). Currently, it doesn't work, as Bootstrap
 * is doing some computation on sass variables (shade-color($primary, 10%)).
 */
$grey-100: #f4f5f6;
$grey-200: #eceff1;
$grey-300: #dde0e3;
$grey-400: #bfc3c7;
$grey-500: #9da2a6;
$grey-600: #7c8086;
$grey-700: #5d6169;
$grey-800: #3e424a;
$grey-900: #1d212a;

$primary-light: #579eff;
$primary: #297ef2;
$primary-dark: #0f5cc7;

$secondary-light: #c27ae3;
$secondary: #a346cd;
$secondary-dark: #7a349a;

$success: #38c949;
$info: $grey-500;
$warning: #efa82d;
$danger: #f96b6b;
$light: $grey-100;
$dark: $grey-900;

$body-color: rgba($grey-900, .9);

/*
 * html targets the same element as :root but its specificity is lower.
 * This allows us to use html to define our CSS custom properties inside
 * bootstrap (or cozy-ui), and use :root in the custom CSS injected by the
 * stack for context that have a theme. This way, the :root selector can
 * override CSS custom properties, without relying on CSS order.
 *
 * Cf https://github.com/cozy/cozy-ui/blob/master/stylus/settings/palette.styl
 */
html {
  --primaryColor: $primary;
  --primaryColorDark: $primary-dark;
  --primaryColorLight: $primary-light;
  --secondaryColor: $secondary;
  --secondaryColorDark: $secondary-dark;
  --secondaryColorLight: $secondary-light;
  --primaryTextColor: $body-color;
  --secondaryTextColor: rgba($grey-900, .48);
  --validColor: $success;
  --warnColor: $warning;
  --errorColor: $danger;
  --neutralBackground: $light;
}
